// Grafana Alloy River 配置：從檔案讀取 NGINX 日誌並推送到 Loki
// 使用的環境變數：
// - LOKI_URL (例如: https://loki.example.com 或 http://<LB-IP>:3100)
// - NGINX_ACCESS_LOG (例如: "/var/log/nginx/access.log")
// - NGINX_ERROR_LOG (例如: "/var/log/nginx/error.log")

// Access logs (JSON format)
loki.source.file "nginx_access" {
  targets = [{ __path__ = "/opt/logs/nginx/test.cc_access.log" }]
  forward_to = [loki.process.nginx_json.receiver]
}

// Error logs (text format)
loki.source.file "nginx_error" {
  targets = [{ __path__ = "/opt/logs/nginx/test.cc_error.log" }]
  forward_to = [loki.process.nginx_error.receiver]
}

// JSON Access Log Processor
loki.process "nginx_json" {
  stage.json {
    expressions = {
      access_time      = "access_time",
      status           = "status",
      http_host        = "http_host",
      request_url_path = "request_url_path",
      method           = "method",
      request_time     = "request_time",
      upstream_status  = "upstream_status",
      x_forward_for    = "x_forward_for",
      remote_addr      = "remote_addr",
      request_id       = "request_id",
      pro              = "pro",
      bytes_sent       = "bytes_sent",
    }
  }

  stage.static_labels {
    values = {
      source = "nginx_access",
      log_type = "access",
      host = env("HOSTNAME"),
      env = "production",
    }
  }

  stage.timestamp {
    source = "access_time"
    format = "2006-01-02T15:04:05Z07:00"
    location = "UTC"
  }

  stage.labels {
    values = {
      status            = "status",
      http_host         = "http_host",
      request_url_path  = "request_url_path",
      method            = "method",
      upstream_status   = "upstream_status",
      x_forward_for     = "x_forward_for",
      remote_addr       = "remote_addr",
      request_id        = "request_id",
      pro               = "pro",
    }
  }

  forward_to = [loki.write.default.receiver]
}

// Error Log Processor
loki.process "nginx_error" {
  stage.static_labels {
    values = {
      source = "nginx_error",
      log_type = "error",
      host = env("HOSTNAME"),
      env = "production",
    }
  }

  stage.regex {
    expression = "^(?P<timestamp>\\d{4}/\\d{2}/\\d{2} \\d{2}:\\d{2}:\\d{2})"
  }
  
  stage.timestamp {
    source = "timestamp"
    format = "2006/01/02 15:04:05"
  }
  
  forward_to = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://10.11.11.215:3100/loki"
  }
}